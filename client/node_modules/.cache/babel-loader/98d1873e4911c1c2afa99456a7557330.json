{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sebastian Valdez\\\\Documents\\\\CSE 316 Homeworks\\\\Homework 3\\\\Playlister_HW3-main\\\\client\\\\src\\\\components\\\\PlaylistCards.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useContext, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport SongCard from \"./SongCard.js\";\nimport { GlobalStoreContext } from \"../store\";\n/*\n    This React component lets us edit a loaded list, which only\n    happens when we are on the proper route.\n    \n    @author McKilla Gorilla\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PlaylistCards() {\n  _s();\n\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  store.history = useHistory();\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleCtrlZ);\n    document.addEventListener(\"keydown\", handleCtrlY);\n    return () => {\n      document.removeEventListener(\"keydown\", handleCtrlZ);\n      document.removeEventListener(\"keydown\", handleCtrlY);\n    };\n  }, [store]);\n  const handleCtrlZ = useCallback(event => {\n    const undoButton = document.getElementById(\"undo-button\");\n    if (event.ctrlKey && (event.key === \"z\" || event.key === \"Z\")) store.undo();\n  }, []);\n  const handleCtrlY = useCallback(event => {\n    const redoButton = document.getElementById(\"redo-button\");\n    if (event.ctrlKey && (event.key === \"y\" || event.key === \"Y\")) store.redo();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"playlist-cards\",\n    children: store.currentList.songs.map((song, index) => /*#__PURE__*/_jsxDEV(SongCard, {\n      id: \"playlist-song-\" + index,\n      index: index,\n      song: song\n    }, \"playlist-song-\" + index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PlaylistCards, \"wDWuFto6sq5xT8regrbErxdshq4=\", false, function () {\n  return [useHistory];\n});\n\n_c = PlaylistCards;\nexport default PlaylistCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlaylistCards\");","map":{"version":3,"names":["useCallback","useContext","useEffect","useHistory","SongCard","GlobalStoreContext","PlaylistCards","store","history","document","addEventListener","handleCtrlZ","handleCtrlY","removeEventListener","event","undoButton","getElementById","ctrlKey","key","undo","redoButton","redo","currentList","songs","map","song","index"],"sources":["C:/Users/Sebastian Valdez/Documents/CSE 316 Homeworks/Homework 3/Playlister_HW3-main/client/src/components/PlaylistCards.js"],"sourcesContent":["import { useCallback, useContext, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport SongCard from \"./SongCard.js\";\nimport { GlobalStoreContext } from \"../store\";\n/*\n    This React component lets us edit a loaded list, which only\n    happens when we are on the proper route.\n    \n    @author McKilla Gorilla\n*/\nfunction PlaylistCards() {\n  const { store } = useContext(GlobalStoreContext);\n  store.history = useHistory();\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleCtrlZ);\n    document.addEventListener(\"keydown\", handleCtrlY);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleCtrlZ);\n      document.removeEventListener(\"keydown\", handleCtrlY);\n    };\n  }, [store]);\n\n  const handleCtrlZ = useCallback((event) => {\n    const undoButton = document.getElementById(\"undo-button\");\n    if (event.ctrlKey && (event.key === \"z\" || event.key === \"Z\")) store.undo();\n  }, []);\n\n  const handleCtrlY = useCallback((event) => {\n    const redoButton = document.getElementById(\"redo-button\");\n    if (event.ctrlKey && (event.key === \"y\" || event.key === \"Y\")) store.redo();\n  }, []);\n\n  return (\n    <div id=\"playlist-cards\">\n      {store.currentList.songs.map((song, index) => (\n        <SongCard\n          id={\"playlist-song-\" + index}\n          key={\"playlist-song-\" + index}\n          index={index}\n          song={song}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default PlaylistCards;\n"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,UAAtB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,SAASC,kBAAT,QAAmC,UAAnC;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,SAASC,aAAT,GAAyB;EAAA;;EACvB,MAAM;IAAEC;EAAF,IAAYN,UAAU,CAACI,kBAAD,CAA5B;EACAE,KAAK,CAACC,OAAN,GAAgBL,UAAU,EAA1B;EAEAD,SAAS,CAAC,MAAM;IACdO,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCC,WAArC;IACAF,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCE,WAArC;IAEA,OAAO,MAAM;MACXH,QAAQ,CAACI,mBAAT,CAA6B,SAA7B,EAAwCF,WAAxC;MACAF,QAAQ,CAACI,mBAAT,CAA6B,SAA7B,EAAwCD,WAAxC;IACD,CAHD;EAID,CARQ,EAQN,CAACL,KAAD,CARM,CAAT;EAUA,MAAMI,WAAW,GAAGX,WAAW,CAAEc,KAAD,IAAW;IACzC,MAAMC,UAAU,GAAGN,QAAQ,CAACO,cAAT,CAAwB,aAAxB,CAAnB;IACA,IAAIF,KAAK,CAACG,OAAN,KAAkBH,KAAK,CAACI,GAAN,KAAc,GAAd,IAAqBJ,KAAK,CAACI,GAAN,KAAc,GAArD,CAAJ,EAA+DX,KAAK,CAACY,IAAN;EAChE,CAH8B,EAG5B,EAH4B,CAA/B;EAKA,MAAMP,WAAW,GAAGZ,WAAW,CAAEc,KAAD,IAAW;IACzC,MAAMM,UAAU,GAAGX,QAAQ,CAACO,cAAT,CAAwB,aAAxB,CAAnB;IACA,IAAIF,KAAK,CAACG,OAAN,KAAkBH,KAAK,CAACI,GAAN,KAAc,GAAd,IAAqBJ,KAAK,CAACI,GAAN,KAAc,GAArD,CAAJ,EAA+DX,KAAK,CAACc,IAAN;EAChE,CAH8B,EAG5B,EAH4B,CAA/B;EAKA,oBACE;IAAK,EAAE,EAAC,gBAAR;IAAA,UACGd,KAAK,CAACe,WAAN,CAAkBC,KAAlB,CAAwBC,GAAxB,CAA4B,CAACC,IAAD,EAAOC,KAAP,kBAC3B,QAAC,QAAD;MACE,EAAE,EAAE,mBAAmBA,KADzB;MAGE,KAAK,EAAEA,KAHT;MAIE,IAAI,EAAED;IAJR,GAEO,mBAAmBC,KAF1B;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAYD;;GApCQpB,a;UAESH,U;;;KAFTG,a;AAsCT,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}